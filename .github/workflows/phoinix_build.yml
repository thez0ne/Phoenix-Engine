name: Phoinix_Build

on:
  push:
    branches:
      - "feature/*"
      - "bugfix/*"
      - "main"
    paths:
      - "Phoinix/**"
      - "Raytracer/**"
      - "CMakeList.txt"
      - ".github/workflows/phoinix_build.yml"
  pull_request:
    branches:
      - "main"
      - "dev"

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  Clang-Format:
    name: Format and Style Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path:
          - check: "./Phoinix"
            exclude: "./Phoinix/src/ImGui/ImConfig.h"
          - check: "./Raytracer"
            exclude: "" # Nothing to exclude
          - check: "./Sandbox"
            exclude: "" # Nothing to exclude
    steps:
      - name: Checkout reposistory and submodules
        uses: actions/checkout@v2
      - name: Run clang-format style check
        uses: jidicula/clang-format-action@v4.5.0
        with:
          clang-format-version: "14"
          check-path: ${{ matrix.path['check'] }}
          exclude-regex: ${{ matrix.path['exclude'] }}

  Ubuntu:
    name: Build Ubuntu
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - name: Checkout reposistory and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Other Dependencies
        run: |
          sudo apt update
          sudo apt install xorg-dev libglu1-mesa-dev libgl1-mesa-dev qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools

      - name: Install Vulkan SDK
        run: |
          wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list http://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list
          sudo apt update
          sudo apt install vulkan-sdk

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE --target Raytracer Sandbox

    # TODO setup running tests
    # - name: Test
    #   working-directory: ${{runner.workspace}}/build
    #   shell: bash
    #   # Execute tests defined by the CMake configuration.
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest -C $BUILD_TYPE -VV

  Windows:
    name: Build Windows
    runs-on: windows-latest

    steps:
      - name: Checkout reposistory and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.1.1
        with:
          version: latest
          cache: true

      - name: Create Build Environment
        run: |
          cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE --target Raytracer Sandbox
